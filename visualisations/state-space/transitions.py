# import
import networkx as nx
import matplotlib.pyplot as plt
from pyvis.network import Network
import math
from tarjan_algo import *

G = nx.MultiDiGraph()


edges = [ ('103043', '103299'), ('103298', '103299'), ('103298', '103362'), ('103298', '4994'), ('103298', '5058'), ('103299', '103043'), ('103299', '103298'), ('103299', '105347'), ('103299', '4994'), ('103299', '4995'), ('103362', '103298'), ('103362', '5058'), ('104961', '121345'), ('104963', '104961'), ('105219', '104963'), ('105219', '105347'), ('105219', '106243'), ('105219', '6915'), ('105219', '7043'), ('105219', '7939'), ('105347', '103299'), ('105347', '105219'), ('105347', '7043'), ('106243', '104963'), ('106243', '105219'), ('106243', '7939'), ('114849', '114851'), ('114849', '115361'), ('114849', '116897'), ('114849', '116899'), ('114851', '116899'), ('115361', '114849'), ('116897', '116899'), ('116899', '51363'), ('118945', '114849'), ('119457', '114849'), ('119457', '115361'), ('119457', '118945'), ('120833', '120865'), ('120865', '120993'), ('120961', '118945'), ('120993', '114849'), ('120993', '118945'), ('121345', '120833'), ('121345', '120993'), ('121345', '121473'), ('121345', '121505'), ('121473', '118945'), ('121473', '119457'), ('121473', '120961'), ('121473', '120993'), ('121473', '121505'), ('121505', '114849'), ('121505', '115361'), ('121505', '118945'), ('121505', '119457'), ('121505', '120993'), ('4867', '5891'), ('4994', '103298'), ('4994', '4995'), ('4994', '5058'), ('4994', '6018'), ('4994', '6082'), ('4995', '103298'), ('4995', '103299'), ('4995', '4867'), ('4995', '4994'), ('4995', '6018'), ('4995', '6019'), ('4995', '7043'), ('5058', '103298'), ('5058', '103362'), ('5058', '4994'), ('5058', '6082'), ('51331', '51363'), ('51331', '51587'), ('51331', '59523'), ('51331', '59779'), ('51363', '116899'), ('51363', '51331'), ('51363', '51587'), ('51363', '51619'), ('51363', '59555'), ('51363', '59811'), ('51587', '51619'), ('51587', '59779'), ('51619', '51363'), ('51619', '51587'), ('51619', '59555'), ('51619', '59811'), ('5890', '5891'), ('5890', '5954'), ('5890', '6018'), ('5891', '5890'), ('5891', '5954'), ('5891', '5955'), ('5891', '6019'), ('5891', '7939'), ('59523', '51331'), ('59523', '51363'), ('59523', '51587'), ('59523', '51619'), ('59523', '59555'), ('59523', '59779'), ('5954', '5890'), ('5954', '5891'), ('5954', '5955'), ('5954', '6018'), ('5954', '6082'), ('5954', '8002'), ('5955', '5891'), ('5955', '5954'), ('59555', '51331'), ('59555', '51363'), ('59555', '51587'), ('59555', '51619'), ('59555', '59523'), ('59555', '59779'), ('59555', '59811'), ('59779', '51587'), ('59779', '59523'), ('59779', '59555'), ('59779', '59811'), ('59811', '51363'), ('59811', '51587'), ('59811', '51619'), ('59811', '59523'), ('59811', '59555'), ('59811', '59779'), ('6018', '4994'), ('6018', '4995'), ('6018', '5954'), ('6018', '6019'), ('6018', '6082'), ('6019', '4995'), ('6019', '5891'), ('6019', '6018'), ('6082', '4994'), ('6082', '5058'), ('6082', '5954'), ('6082', '6018'), ('6915', '105219'), ('6915', '105347'), ('6915', '5891'), ('6915', '7043'), ('6915', '7939'), ('7043', '103299'), ('7043', '105347'), ('7043', '4995'), ('7043', '6915'), ('7043', '7939'), ('7043', '8067'), ('7939', '105219'), ('7939', '106243'), ('7939', '5891'), ('7939', '6915'), ('7939', '7043'), ('7939', '8002'), ('7939', '8003'), ('8002', '5954'), ('8002', '7939'), ('8002', '8003'), ('8003', '7939'), ('8003', '8002'), ('8067', '7939'), ]
edge_widths = [ 0.2, 1.58629, 0.2, 1.29861, 0.2, 0.2, 1.80944, 0.893147, 0.2, 1.80944, 0.2, 0.893147, 2.27944, 2.27944, 1.58629, 1.99176, 0.893147, 0.893147, 0.2, 0.2, 2.27944, 0.2, 0.2, 1.58629, 2.5979, 1.29861, 0.2, 0.2, 1.99176, 0.893147, 0.2, 0.2, 1.99176, 2.27944, 1.99176, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 1.29861, 0.2, 0.2, 1.99176, 0.2, 0.2, 0.893147, 0.2, 0.893147, 1.29861, 0.2, 0.2, 0.893147, 0.2, 0.2, 0.2, 0.893147, 0.2, 1.29861, 0.893147, 0.2, 0.2, 1.29861, 0.2, 0.893147, 0.2, 0.893147, 0.2, 0.2, 0.893147, 1.29861, 0.2, 0.2, 0.2, 0.2, 0.2, 1.29861, 0.2, 0.2, 1.99176, 3.72636, 0.2, 4.24305, 0.2, 1.29861, 3.78352, 0.2, 4.43411, 0.2, 1.29861, 0.2, 0.893147, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.893147, 0.2, 0.893147, 0.893147, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 3.78352, 0.2, 0.2, 1.29861, 0.2, 2.14591, 0.893147, 0.2, 0.2, 1.29861, 0.2, 0.2, 4.02864, 0.2, 3.63399, 0.893147, 0.2, 0.2, 0.2, 0.2, 1.29861, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.893147, 0.893147, 0.2, 0.2, 0.893147, 1.29861, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 3.09037, 0.2, 1.80944, 0.2, 2.90805, 4.60672, 0.2, 1.80944, 4.43411, 4.75388, 4.26044, 0.2, ]
nodes = [ '4867', '4994', '4995', '5058', '5890', '5891', '5954', '5955', '6018', '6019', '6082', '6915', '7043', '7939', '8002', '8003', '8067', '51331', '51363', '51587', '51619', '59523', '59555', '59779', '59811', '103043', '103298', '103299', '103362', '104961', '104963', '105219', '105347', '106243', '114849', '114851', '115361', '116897', '116899', '118945', '119457', '120833', '120865', '120961', '120993', '121345', '121473', '121505', ]
node_sizes = [ 0.1, 10.1, 15, 5.2, 1.6, 8.5, 10.5, 0.5, 2.5, 3.3, 3.4, 5.2, 1.8, 554.7, 49.5, 52.6, 0.1, 0.5, 138.3, 145.5, 189.8, 2.2, 1236.3, 3, 104.4, 3.5, 17.4, 258.7, 3.1, 3.5, 3.1, 26, 24.9, 43.5, 22.5, 0.1, 0.5, 2.3, 221, 1.6, 0.6, 0.1, 0.1, 0.1, 0.9, 4.8, 1.7, 0.7, ]

print(len(edges))


# prune_nodes(nodes, node_sizes, edges, edge_widths)
prune_edges(edges, edge_widths, 0.5)




G.add_nodes_from(nodes)

for i in range(len(edges)):
    G.add_edge(edges[i][0], edges[i][1], width = edge_widths[i])


node_d = {}
for i in range(len(nodes)):
    val = math.sqrt(node_sizes[i])
    val = val * 2
    node_d[nodes[i]] = val

nx.set_node_attributes(G, node_d, 'size')

net = Network(directed=True)
net.repulsion()
net.from_nx(G)
net.show('transitions.html')


CellStates(nodes, edges, node_sizes)



# pos = nx.nx_agraph.graphviz_layout(G)
# nx.draw_networkx_nodes(G, pos, node_size = node_sizes)
# nx.draw_networkx_edges(G, pos, edgelist=G.edges(), nodelist=node_sizes) #, width=edge_widths, connectionstyle='arc3, rad = 0.1') #, nodelist=node_sizes)
# nx.draw_networkx_labels(G,pos)
# plt.show()


