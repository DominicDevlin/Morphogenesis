# import
import networkx as nx
import matplotlib.pyplot as plt
from pyvis.network import Network
import math
from tarjan_algo import *

G = nx.MultiDiGraph()


edges = [ ('100513', '116897'), ('100515', '100513'), ('100576', '100578'), ('100578', '104674'), ('100578', '35042'), ('100578', '39138'), ('103298', '103314'), ('103298', '103330'), ('103298', '103346'), ('103298', '111490'), ('103298', '111506'), ('103298', '111522'), ('103298', '4994'), ('103298', '5010'), ('103298', '5026'), ('103299', '103331'), ('103299', '105347'), ('103299', '111523'), ('103299', '4995'), ('103299', '5027'), ('103314', '103298'), ('103314', '103330'), ('103314', '103378'), ('103314', '105362'), ('103314', '105426'), ('103314', '111506'), ('103314', '37778'), ('103314', '5010'), ('103330', '103298'), ('103330', '103314'), ('103330', '103331'), ('103330', '103346'), ('103330', '111490'), ('103330', '111522'), ('103330', '5026'), ('103330', '5042'), ('103331', '103299'), ('103331', '103330'), ('103331', '111522'), ('103331', '111523'), ('103331', '4995'), ('103331', '5027'), ('103346', '103314'), ('103346', '103330'), ('103346', '5042'), ('103378', '103314'), ('104611', '100515'), ('104611', '104867'), ('104611', '105123'), ('104674', '105186'), ('104674', '39138'), ('104674', '39650'), ('104867', '105379'), ('104963', '105091'), ('105091', '104611'), ('105091', '105123'), ('105123', '100515'), ('105123', '104611'), ('105123', '105379'), ('105186', '39650'), ('105219', '104963'), ('105219', '105091'), ('105219', '105347'), ('105219', '106243'), ('105219', '6915'), ('105219', '7043'), ('105219', '7939'), ('105346', '103298'), ('105347', '103299'), ('105347', '105091'), ('105347', '105123'), ('105347', '105219'), ('105347', '105379'), ('105347', '4995'), ('105347', '6915'), ('105347', '7043'), ('105362', '103314'), ('105362', '105346'), ('105362', '105426'), ('105362', '113554'), ('105363', '105347'), ('105379', '103331'), ('105379', '105123'), ('105379', '105347'), ('105426', '105362'), ('105426', '105427'), ('105426', '113618'), ('105426', '113619'), ('105426', '7122'), ('105427', '105363'), ('106243', '105219'), ('106243', '7939'), ('111490', '103298'), ('111490', '103314'), ('111490', '111491'), ('111490', '111506'), ('111490', '111522'), ('111490', '111523'), ('111490', '113538'), ('111491', '103299'), ('111491', '111523'), ('111506', '103314'), ('111506', '113554'), ('111522', '103330'), ('111522', '111490'), ('111522', '111523'), ('111523', '103331'), ('111523', '111491'), ('111523', '111522'), ('113538', '111490'), ('113538', '113539'), ('113538', '113554'), ('113539', '111491'), ('113539', '113538'), ('113554', '113538'), ('113554', '113539'), ('113554', '113618'), ('113555', '113538'), ('113555', '113539'), ('113618', '105426'), ('113618', '113554'), ('113618', '113619'), ('113619', '105427'), ('113619', '113555'), ('113619', '113618'), ('116896', '100578'), ('116896', '116897'), ('116896', '116898'), ('116896', '116960'), ('116896', '116962'), ('116897', '116896'), ('116898', '100578'), ('116960', '100576'), ('116960', '100578'), ('116960', '116896'), ('116960', '116962'), ('116962', '100578'), ('116962', '51426'), ('35042', '39138'), ('37778', '103314'), ('37778', '5010'), ('37842', '37778'), ('39138', '39650'), ('39618', '39874'), ('39618', '6722'), ('39618', '6850'), ('39650', '39618'), ('39650', '6850'), ('39650', '6882'), ('39778', '40802'), ('39874', '105426'), ('39874', '39890'), ('39874', '7106'), ('39890', '105426'), ('39890', '37778'), ('39890', '37842'), ('40802', '8034'), ('4994', '5010'), ('4994', '5026'), ('4995', '103299'), ('4995', '103331'), ('4995', '5027'), ('4995', '5891'), ('4995', '6019'), ('4995', '6051'), ('4995', '6915'), ('4995', '7043'), ('4995', '7939'), ('5010', '103314'), ('5010', '5042'), ('5010', '5074'), ('5010', '6034'), ('5010', '6098'), ('5026', '103330'), ('5026', '4994'), ('5026', '5027'), ('5026', '5042'), ('5026', '6050'), ('5026', '6066'), ('5027', '103299'), ('5027', '103330'), ('5027', '103331'), ('5027', '4995'), ('5027', '5026'), ('5027', '6050'), ('5027', '6051'), ('5042', '103314'), ('5042', '103346'), ('5042', '5010'), ('5042', '5026'), ('5042', '6034'), ('5058', '4994'), ('5058', '5074'), ('5074', '5010'), ('5074', '7122'), ('5090', '5026'), ('5090', '6114'), ('51426', '35042'), ('5891', '5923'), ('5891', '6019'), ('5891', '7939'), ('5922', '5923'), ('5922', '5986'), ('5922', '6010'), ('5922', '6050'), ('5922', '7971'), ('5923', '5891'), ('5923', '5922'), ('5923', '6010'), ('5923', '6051'), ('5923', '7939'), ('5923', '7971'), ('5938', '5922'), ('5986', '5922'), ('5986', '6002'), ('5986', '6010'), ('6002', '6010'), ('6010', '5922'), ('6010', '5923'), ('6010', '5938'), ('6010', '5986'), ('6010', '7971'), ('6010', '8058'), ('6010', '8059'), ('6019', '4995'), ('6019', '5027'), ('6019', '5891'), ('6019', '6051'), ('6034', '5010'), ('6034', '5042'), ('6034', '6066'), ('6034', '6098'), ('6050', '5026'), ('6050', '5922'), ('6050', '6010'), ('6050', '6051'), ('6050', '6066'), ('6050', '6130'), ('6051', '4995'), ('6051', '5027'), ('6051', '5922'), ('6051', '5923'), ('6051', '6019'), ('6051', '6050'), ('6066', '5042'), ('6066', '6034'), ('6066', '6050'), ('6066', '6130'), ('6098', '5074'), ('6098', '6034'), ('6098', '6130'), ('6114', '6050'), ('6130', '6050'), ('6130', '6066'), ('6130', '6138'), ('6138', '6130'), ('6722', '6754'), ('6722', '6978'), ('6722', '7010'), ('6754', '6722'), ('6754', '7010'), ('6754', '7778'), ('6850', '6722'), ('6850', '7106'), ('6882', '6754'), ('6915', '105219'), ('6915', '105347'), ('6915', '7043'), ('6915', '7939'), ('6915', '8067'), ('6978', '8034'), ('7010', '7138'), ('7043', '103299'), ('7043', '105219'), ('7043', '105347'), ('7043', '4995'), ('7043', '6019'), ('7043', '6915'), ('7043', '7939'), ('7043', '8067'), ('7106', '5058'), ('7106', '5090'), ('7106', '7138'), ('7122', '105426'), ('7138', '5090'), ('7138', '8130'), ('7778', '8034'), ('7939', '105219'), ('7939', '106243'), ('7939', '5891'), ('7939', '5923'), ('7939', '6019'), ('7939', '6915'), ('7939', '7043'), ('7939', '7970'), ('7939', '7971'), ('7939', '8051'), ('7939', '8058'), ('7939', '8059'), ('7939', '8067'), ('7970', '5922'), ('7970', '8058'), ('7971', '5922'), ('7971', '5923'), ('7971', '6010'), ('7971', '7939'), ('7971', '7970'), ('7971', '8058'), ('7971', '8059'), ('8019', '7939'), ('8034', '39778'), ('8034', '5986'), ('8034', '8050'), ('8034', '8162'), ('8050', '8178'), ('8051', '7939'), ('8058', '6010'), ('8058', '7939'), ('8058', '7971'), ('8058', '8059'), ('8059', '6010'), ('8059', '7939'), ('8059', '7971'), ('8059', '8019'), ('8059', '8051'), ('8059', '8058'), ('8067', '6019'), ('8067', '7043'), ('8067', '7939'), ('8130', '8146'), ('8146', '6098'), ('8162', '8178'), ('8178', '6130'), ]
edge_widths = [ 3.41888, 3.4581, 0.2, 0.893147, 0.2, 0.893147, 1.29861, 1.58629, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 3.69651, 1.58629, 0.2, 1.80944, 0.2, 0.893147, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.893147, 1.80944, 0.2, 2.39722, 0.2, 0.2, 0.893147, 1.29861, 0.2, 3.4581, 2.68491, 0.2, 1.58629, 0.2, 1.29861, 0.2, 0.2, 0.2, 0.2, 3.4581, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 1.99176, 2.5979, 2.76495, 0.2, 2.90805, 0.2, 0.2, 1.99176, 3.03321, 3.5673, 0.893147, 1.80944, 0.2, 0.893147, 0.2, 3.29104, 0.893147, 1.29861, 1.29861, 0.893147, 0.2, 0.2, 1.29861, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.893147, 0.2, 0.2, 0.893147, 0.2, 0.2, 0.2, 3.91357, 1.58629, 0.893147, 0.2, 0.2, 0.2, 1.29861, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 1.80944, 0.893147, 0.893147, 0.2, 1.29861, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.893147, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 1.99176, 0.2, 3.37805, 0.2, 0.2, 0.2, 1.58629, 0.893147, 0.893147, 0.2, 0.2, 0.2, 0.2, 0.2, 1.29861, 0.893147, 0.2, 0.2, 1.29861, 0.2, 0.2, 0.2, 0.2, 0.893147, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 1.58629, 0.2, 1.80944, 0.2, 1.29861, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 1.58629, 0.2, 0.893147, 0.2, 0.893147, 0.2, 0.2, 0.2, 1.58629, 1.58629, 1.29861, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 1.29861, 0.2, 1.29861, 0.2, 0.2, 0.2, 0.2, 0.2, 1.29861, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 4.17029, 0.2, 0.893147, 0.2, 0.893147, 0.893147, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.893147, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 1.99176, 0.2, 1.29861, 2.27944, 0.2, 0.2, 0.2, 0.2, 0.2, 1.29861, 0.893147, 0.2, 0.893147, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 2.68491, 3.9612, 0.893147, 0.2, 0.2, 2.50259, 0.2, 0.2, 3.4581, 0.2, 4.71086, 5.05981, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 3.14444, 0.2, 2.76495, 2.27944, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 4.17029, 2.90805, 1.58629, 5.52301, 0.2, 5.54233, 2.50259, 0.2, 0.2, 5.00402, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, ]
nodes = [ '4994', '4995', '5010', '5026', '5027', '5042', '5058', '5074', '5090', '5891', '5922', '5923', '5938', '5986', '6002', '6010', '6019', '6034', '6050', '6051', '6066', '6098', '6114', '6130', '6138', '6722', '6754', '6850', '6882', '6915', '6978', '7010', '7043', '7106', '7122', '7138', '7778', '7939', '7970', '7971', '8019', '8034', '8050', '8051', '8058', '8059', '8067', '8130', '8146', '8162', '8178', '35042', '37778', '37842', '39138', '39618', '39650', '39778', '39874', '39890', '40802', '51426', '100513', '100515', '100576', '100578', '103298', '103299', '103314', '103330', '103331', '103346', '103378', '104611', '104674', '104867', '104963', '105091', '105123', '105186', '105219', '105346', '105347', '105362', '105363', '105379', '105426', '105427', '106243', '111490', '111491', '111506', '111522', '111523', '113538', '113539', '113554', '113555', '113618', '113619', '116896', '116897', '116898', '116960', '116962', ]
node_sizes = [ 0.2, 22.5, 3.7, 22.7, 14.9, 1.8, 0.1, 0.9, 0.2, 8.4, 2.1, 3.6, 0.1, 0.5, 0.1, 29, 3.7, 0.4, 8.3, 6.4, 0.5, 0.5, 0.1, 0.9, 0.1, 0.5, 0.3, 0.2, 0.2, 10.4, 0.1, 0.1, 6, 0.5, 0.6, 0.2, 0.5, 1161.4, 0.1, 10.1, 0.1, 0.6, 0.1, 0.1, 205.4, 100.5, 0.6, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 15.9, 6.7, 0.1, 0.7, 1.5, 0.1, 0.1, 35.7, 19.2, 0.1, 0.8, 13.3, 288.6, 9, 93.3, 173, 0.4, 0.2, 7.2, 0.5, 0.1, 1.1, 5.3, 4.3, 0.2, 142.2, 0.1, 165.6, 0.7, 0.2, 3.3, 11.1, 0.3, 24.7, 21.2, 0.8, 0.5, 13.1, 25.9, 1, 0.2, 1.5, 0.4, 29.7, 0.9, 787.2, 86.9, 0.1, 12.5, 0.4, ]


print(len(edges))


# prune_nodes(nodes, node_sizes, edges, edge_widths)
prune_edges(edges, edge_widths, 1)




G.add_nodes_from(nodes)

for i in range(len(edges)):
    G.add_edge(edges[i][0], edges[i][1], width = edge_widths[i])


node_d = {}
for i in range(len(nodes)):
    val = math.sqrt(node_sizes[i])
    val = val * 2
    node_d[nodes[i]] = val

nx.set_node_attributes(G, node_d, 'size')

net = Network(directed=True)
net.repulsion()
net.from_nx(G)
net.show('transitions.html')


CellStates(nodes, edges, node_sizes)



# pos = nx.nx_agraph.graphviz_layout(G)
# nx.draw_networkx_nodes(G, pos, node_size = node_sizes)
# nx.draw_networkx_edges(G, pos, edgelist=G.edges(), nodelist=node_sizes) #, width=edge_widths, connectionstyle='arc3, rad = 0.1') #, nodelist=node_sizes)
# nx.draw_networkx_labels(G,pos)
# plt.show()


