# import
import networkx as nx
import matplotlib.pyplot as plt
from pyvis.network import Network
import math
from tarjan_algo import *

G = nx.MultiDiGraph()

edges = [ ('34083644', '34083708'), ('34083644', '34214716'), ('34083708', '34083644'), ('34083708', '34149244'), ('34083708', '34214716'), ('34083708', '34214780'), ('34149244', '34083708'), ('34214716', '34083644'), ('34214716', '34083708'), ('34214716', '34214780'), ('34214716', '42603388'), ('34214780', '34083708'), ('34214780', '34214716'), ('34214780', '42603324'), ('36180796', '34083644'), ('36180860', '34083708'), ('36243252', '36243260'), ('36243252', '36243316'), ('36243252', '36374324'), ('36243252', '36505396'), ('36243260', '36247420'), ('36243316', '36243252'), ('36243316', '36243312'), ('36243316', '36243324'), ('36243324', '36246396'), ('36246396', '36180860'), ('36247420', '36180860'), ('36374324', '36243252'), ('36374324', '36243316'), ('36374324', '36636468'), ('36439604', '36570676'), ('36439860', '36439604'), ('36439860', '36439868'), ('36439860', '36505396'), ('36439860', '36570676'), ('36439860', '36570932'), ('36439868', '36442940'), ('36439868', '36443964'), ('36442940', '36180796'), ('36443964', '36442940'), ('36505396', '36243252'), ('36505396', '36243316'), ('36505396', '36439860'), ('36505396', '36570932'), ('36505396', '36636468'), ('36570676', '36627508'), ('36570676', '36627764'), ('36570676', '36628020'), ('36570676', '36628276'), ('36570932', '36439860'), ('36570932', '36505396'), ('36570932', '36570676'), ('36570932', '36578868'), ('36570932', '36579124'), ('36570932', '36611892'), ('36570932', '36627508'), ('36570932', '36627764'), ('36570932', '36628020'), ('36570932', '36628276'), ('36570932', '36636468'), ('36578612', '36579124'), ('36578868', '36627508'), ('36579124', '36570932'), ('36579124', '36578612'), ('36579124', '36627764'), ('36611892', '36570932'), ('36611892', '36627508'), ('36611892', '36627764'), ('36611892', '36628276'), ('36627508', '36627764'), ('36627508', '36628276'), ('36627764', '36570932'), ('36627764', '36579124'), ('36627764', '36627508'), ('36627764', '36628276'), ('36628020', '36627508'), ('36628020', '36627764'), ('36628276', '36570932'), ('36628276', '36579124'), ('36628276', '36611892'), ('36628276', '36627508'), ('36628276', '36627764'), ('36628276', '36628020'), ('36636468', '36243252'), ('36636468', '36243316'), ('36636468', '36374324'), ('36636468', '36505396'), ('36636468', '36570932'), ('42603324', '42603388'), ('42603388', '34214780'), ]
edge_widths = [ 1.80944, 1.29861, 2.39722, 1.29861, 0.2, 2.50259, 1.58629, 0.2, 0.893147, 3.03321, 0.2, 2.5979, 3.03321, 0.2, 0.893147, 0.2, 0.2, 4.11202, 3.5322, 2.39722, 0.2, 4.11202, 0.893147, 0.2, 0.2, 0.2, 0.2, 3.4581, 0.2, 2.14591, 0.2, 0.2, 1.29861, 2.50259, 2.14591, 4.97912, 0.2, 0.893147, 0.893147, 0.893147, 2.68491, 0.2, 1.99176, 0.893147, 1.58629, 2.90805, 0.2, 2.14591, 0.2, 5.23044, 0.2, 3.03321, 0.2, 2.27944, 1.29861, 3.37805, 2.5979, 3.29104, 4.40469, 2.14591, 0.2, 0.2, 2.39722, 0.2, 0.2, 0.893147, 0.2, 0.2, 0.2, 4.86344, 0.2, 2.68491, 0.2, 2.14591, 5.05981, 3.5322, 0.893147, 5.11998, 0.2, 0.2, 3.69651, 3.5322, 0.2, 0.2, 0.2, 2.14591, 1.58629, 1.99176, 0.2, 0.893147, ]
nodes = [ '34083644', '34083708', '34149244', '34214716', '34214780', '36180796', '36180860', '36243252', '36243260', '36243312', '36243316', '36243324', '36246396', '36247420', '36374324', '36439604', '36439860', '36439868', '36442940', '36443964', '36505396', '36570676', '36570932', '36578612', '36578868', '36579124', '36611892', '36627508', '36627764', '36628020', '36628276', '36636468', '42603324', '42603388', ]
node_sizes = [ 49.1, 797.2, 575.9, 31, 72, 1.1, 1, 238.2, 0.1, 18, 113.2, 0.2, 0.1, 0.1, 37.5, 0.1, 819.8, 0.7, 0.5, 0.3, 63.3, 4.8, 395.1, 0.2, 0.1, 6.6, 0.7, 38, 101.5, 5.9, 56.9, 18, 0.2, 0.5, ]

print(len(edges))


#prune_nodes(nodes, node_sizes, edges, edge_widths)
#prune_edges(edges, edge_widths, 1)




G.add_nodes_from(nodes)

for i in range(len(edges)):
    G.add_edge(edges[i][0], edges[i][1], width = edge_widths[i])


node_d = {}
for i in range(len(nodes)):
    val = math.sqrt(node_sizes[i])
    val = val * 2
    node_d[nodes[i]] = val

nx.set_node_attributes(G, node_d, 'size')

net = Network(directed=True)
net.repulsion()
net.from_nx(G)
net.show('transitions.html')


CellStates(nodes, edges, node_sizes)



# pos = nx.nx_agraph.graphviz_layout(G)
# nx.draw_networkx_nodes(G, pos, node_size = node_sizes)
# nx.draw_networkx_edges(G, pos, edgelist=G.edges(), nodelist=node_sizes) #, width=edge_widths, connectionstyle='arc3, rad = 0.1') #, nodelist=node_sizes)
# nx.draw_networkx_labels(G,pos)
# plt.show()


