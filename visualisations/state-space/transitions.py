# import
import networkx as nx
import matplotlib.pyplot as plt
from pyvis.network import Network
import math
from tarjan_algo import *

G = nx.MultiDiGraph()

edges = [ ('1054336', '9442944'), ('11802240', '9442944'), ('11802242', '11802240'), ('11802243', '11802242'), ('11802248', '11802250'), ('11802250', '11802251'), ('11802251', '11802243'), ('17831552', '26220160'), ('17831552', '9442944'), ('19928704', '17831552'), ('19928704', '26220160'), ('19928705', '19928712'), ('19928705', '3151488'), ('19928712', '3413640'), ('20121121', '28509729'), ('20121123', '20121121'), ('20121123', '20137507'), ('20121123', '20170275'), ('20137505', '28526113'), ('20137507', '20137505'), ('20170275', '20137505'), ('20190848', '17831552'), ('20190848', '19928704'), ('20190848', '20190856'), ('20190848', '26220160'), ('20190848', '3151488'), ('20190849', '19928704'), ('20190849', '19928705'), ('20190849', '20190848'), ('20190849', '20190857'), ('20190849', '3151488'), ('20190851', '3413635'), ('20190856', '28579464'), ('20190857', '20321931'), ('20321921', '20190849'), ('20321921', '20321929'), ('20321923', '20190849'), ('20321923', '20321921'), ('20321929', '20321921'), ('20321929', '20321931'), ('20321929', '53876361'), ('20321931', '20190851'), ('20321931', '20321921'), ('20321931', '20321923'), ('20321931', '20321929'), ('20321931', '3544715'), ('20321931', '37099147'), ('20321931', '53876361'), ('20321931', '53876363'), ('20383267', '20121123'), ('20383275', '20121123'), ('26220160', '9442944'), ('26281504', '26281632'), ('26281504', '26469920'), ('26281504', '26470048'), ('26281632', '26281504'), ('26281632', '26285728'), ('26281632', '26445344'), ('26281632', '26445472'), ('26281632', '26461856'), ('26281632', '26469920'), ('26281632', '26470048'), ('26285728', '26281632'), ('26314400', '26281632'), ('26412704', '26281632'), ('26420896', '26412704'), ('26420896', '26453664'), ('26428961', '26429089'), ('26428961', '26437153'), ('26429088', '26412704'), ('26429088', '26420896'), ('26429089', '26429088'), ('26437152', '26437280'), ('26437153', '26437152'), ('26437280', '26420896'), ('26445344', '26469920'), ('26445472', '26281632'), ('26445472', '26461856'), ('26445472', '26469920'), ('26445472', '26470048'), ('26453664', '26412704'), ('26461856', '26281632'), ('26461856', '26469920'), ('26461856', '26470048'), ('26469920', '26470048'), ('26470048', '26281632'), ('26470048', '26314400'), ('26470048', '26445472'), ('26470048', '26461856'), ('26470048', '26469920'), ('28509729', '26428961'), ('28526113', '26428961'), ('28579458', '11802242'), ('28579464', '28579466'), ('28579466', '28710538'), ('28710538', '28579458'), ('3151488', '1054336'), ('3413632', '1054336'), ('3413632', '11802240'), ('3413632', '3151488'), ('3413632', '9442944'), ('3413633', '3151488'), ('3413633', '3413632'), ('3413635', '3413632'), ('3413635', '3413633'), ('3413640', '11802248'), ('3544707', '3413633'), ('3544707', '3413635'), ('3544713', '3544715'), ('3544715', '3544707'), ('3544715', '37099147'), ('37099017', '37099145'), ('37099019', '37099017'), ('37099019', '37099051'), ('37099019', '53876267'), ('37099051', '53872171'), ('37099145', '37099017'), ('37099145', '37099147'), ('37099147', '3544715'), ('37099147', '37099019'), ('37099147', '37099145'), ('37099147', '53876363'), ('37099147', '53876395'), ('52823113', '52823625'), ('52823117', '52823625'), ('52823117', '52823629'), ('52823561', '52823565'), ('52823561', '52823625'), ('52823561', '52823629'), ('52823561', '52827657'), ('52823561', '52827721'), ('52823561', '53872137'), ('52823565', '52823561'), ('52823565', '52823629'), ('52823565', '52839949'), ('52823625', '52823113'), ('52823625', '52823117'), ('52823625', '52823561'), ('52823625', '52823565'), ('52823625', '52823629'), ('52823625', '52827657'), ('52823625', '52827721'), ('52823629', '52823117'), ('52823629', '52823561'), ('52823629', '52823565'), ('52823629', '52823625'), ('52823629', '52856397'), ('52827657', '52827721'), ('52827657', '52827785'), ('52827657', '52827849'), ('52827657', '53876233'), ('52827657', '53876361'), ('52827721', '52823625'), ('52827721', '52827657'), ('52827721', '52827785'), ('52827721', '52827849'), ('52827785', '52827657'), ('52827785', '52827721'), ('52827785', '52827849'), ('52827785', '53876361'), ('52827849', '52827721'), ('52827849', '52827785'), ('52839949', '52840013'), ('52840013', '52823629'), ('52855881', '52855885'), ('52855885', '52823113'), ('52855885', '52823117'), ('52855885', '52823625'), ('52855885', '52823629'), ('52855885', '52855881'), ('52855885', '52856393'), ('52855885', '52856397'), ('52856393', '52823117'), ('52856393', '52823625'), ('52856393', '52823629'), ('52856393', '52855885'), ('52856393', '52856397'), ('52856397', '52823117'), ('52856397', '52823625'), ('52856397', '52823629'), ('52856397', '52855885'), ('52856397', '52856393'), ('53872137', '52823561'), ('53872137', '53876233'), ('53872171', '20383275'), ('53872171', '53937707'), ('53876233', '52827657'), ('53876233', '53876361'), ('53876267', '20383267'), ('53876267', '53872171'), ('53876361', '20321929'), ('53876361', '20321931'), ('53876361', '37099017'), ('53876361', '37099145'), ('53876361', '37099147'), ('53876361', '52827657'), ('53876361', '52827785'), ('53876361', '53876233'), ('53876361', '53876363'), ('53876363', '20321931'), ('53876363', '37099147'), ('53876363', '53876361'), ('53876395', '53876267'), ('53937707', '20121123'), ]
edge_widths = [ 1.80944, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 2.27944, 0.2, 2.27944, 0.893147, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.893147, 0.893147, 0.2, 0.2, 0.2, 2.27944, 0.2, 1.99176, 0.2, 0.893147, 0.2, 0.2, 0.2, 2.83906, 0.2, 1.29861, 2.27944, 0.2, 3.33549, 0.893147, 0.2, 1.99176, 2.50259, 1.58629, 1.29861, 0.2, 0.2, 0.893147, 0.2, 0.2, 2.5979, 0.2, 2.39722, 0.2, 2.50259, 1.80944, 0.2, 1.80944, 0.893147, 3.09037, 3.5322, 1.80944, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 1.80944, 0.2, 0.893147, 1.29861, 0.2, 1.80944, 0.2, 0.893147, 3.9612, 4.13183, 0.2, 1.80944, 1.58629, 2.83906, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 1.58629, 0.2, 0.2, 0.2, 0.2, 0.2, 1.29861, 0.2, 0.2, 0.2, 0.893147, 0.2, 0.2, 1.29861, 0.2, 1.58629, 0.893147, 0.2, 0.2, 0.2, 0.893147, 1.58629, 0.2, 1.29861, 0.2, 0.2, 0.2, 0.2, 1.29861, 0.893147, 1.29861, 1.58629, 0.893147, 2.27944, 0.2, 0.893147, 1.29861, 2.39722, 0.2, 0.2, 0.2, 2.83906, 0.2, 4.20733, 1.58629, 2.50259, 0.2, 0.2, 2.39722, 4.38965, 3.93767, 2.68491, 2.68491, 0.2, 1.58629, 1.58629, 0.2, 2.76495, 2.27944, 1.58629, 1.99176, 1.29861, 1.58629, 2.90805, 0.893147, 2.14591, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 2.14591, 3.66574, 0.2, 1.80944, 1.58629, 1.29861, 1.29861, 0.2, 2.27944, 3.29104, 3.9612, 2.14591, 0.2, 0.2, 0.2, 0.2, 0.2, 2.5979, 0.2, 0.2, 3.29104, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 1.99176, 0.893147, 0.893147, 0.2, 0.893147, 0.2, 0.2, ]
nodes = [ '1054336', '3151488', '3413632', '3413633', '3413635', '3413640', '3544707', '3544713', '3544715', '9442944', '11802240', '11802242', '11802243', '11802248', '11802250', '11802251', '17831552', '19928704', '19928705', '19928712', '20121121', '20121123', '20137505', '20137507', '20170275', '20190848', '20190849', '20190851', '20190856', '20190857', '20321921', '20321923', '20321929', '20321931', '20383267', '20383275', '26220160', '26281504', '26281632', '26285728', '26314400', '26412704', '26420896', '26428961', '26429088', '26429089', '26437152', '26437153', '26437280', '26445344', '26445472', '26453664', '26461856', '26469920', '26470048', '28509729', '28526113', '28579458', '28579464', '28579466', '28710538', '37099017', '37099019', '37099051', '37099145', '37099147', '52823113', '52823117', '52823561', '52823565', '52823625', '52823629', '52827657', '52827721', '52827785', '52827849', '52839949', '52840013', '52855881', '52855885', '52856393', '52856397', '53872137', '53872171', '53876233', '53876267', '53876361', '53876363', '53876395', '53937707', ]
node_sizes = [ 1.4, 0.8, 0.9, 1, 0.3, 0.2, 0.8, 0.3, 2.6, 446.5, 0.7, 0.2, 0.1, 0.1, 0.2, 0.1, 2, 2.1, 0.2, 0.1, 0.2, 0.3, 0.3, 0.1, 0.1, 1.3, 5.7, 0.1, 0.1, 0.4, 4.8, 2.3, 37.3, 33.6, 0.1, 0.1, 10.7, 2.2, 889.2, 222.5, 0.1, 2.5, 0.4, 0.4, 0.3, 0.2, 0.1, 0.2, 0.3, 0.1, 2, 0.5, 1.3, 19.9, 65.3, 0.1, 0.3, 0.1, 0.3, 0.1, 0.2, 5.3, 1, 0.1, 3.8, 7.4, 0.2, 0.8, 8, 3.6, 98.9, 222.6, 14, 15.6, 14.8, 2.5, 0.1, 0.1, 0.2, 513.9, 3, 428.6, 0.6, 0.2, 19.4, 0.2, 64.5, 2.3, 0.1, 0.1, ]


print(len(edges))


#prune_nodes(nodes, node_sizes, edges, edge_widths)
#prune_edges(edges, edge_widths, 1)




G.add_nodes_from(nodes)

for i in range(len(edges)):
    G.add_edge(edges[i][0], edges[i][1], width = edge_widths[i])


node_d = {}
for i in range(len(nodes)):
    val = math.sqrt(node_sizes[i])
    val = val * 2
    node_d[nodes[i]] = val

nx.set_node_attributes(G, node_d, 'size')

net = Network(directed=True)
net.repulsion()
net.from_nx(G)
net.show('transitions.html')


CellStates(nodes, edges, node_sizes)



# pos = nx.nx_agraph.graphviz_layout(G)
# nx.draw_networkx_nodes(G, pos, node_size = node_sizes)
# nx.draw_networkx_edges(G, pos, edgelist=G.edges(), nodelist=node_sizes) #, width=edge_widths, connectionstyle='arc3, rad = 0.1') #, nodelist=node_sizes)
# nx.draw_networkx_labels(G,pos)
# plt.show()


