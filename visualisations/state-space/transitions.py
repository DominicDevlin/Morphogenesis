# import
import networkx as nx
import matplotlib.pyplot as plt
from pyvis.network import Network
import math
from tarjan_algo import *

G = nx.MultiDiGraph()


edges = [ ('1033', '1065'), ('1049', '1033'), ('1049', '1081'), ('1053', '1049'), ('1053', '29'), ('1065', '1033'), ('1065', '1081'), ('1065', '1577'), ('1081', '1033'), ('1081', '1049'), ('1081', '1065'), ('1577', '1065'), ('29', '1053'), ('29', '31'), ('29', '543'), ('29', '797'), ('29', '799'), ('31', '29'), ('31', '541'), ('541', '29'), ('541', '31'), ('541', '543'), ('541', '797'), ('541', '799'), ('543', '29'), ('543', '541'), ('543', '797'), ('775', '791'), ('775', '919'), ('791', '775'), ('791', '797'), ('791', '799'), ('791', '919'), ('797', '1053'), ('797', '29'), ('797', '31'), ('797', '541'), ('797', '543'), ('797', '791'), ('797', '799'), ('797', '927'), ('799', '29'), ('799', '541'), ('799', '791'), ('799', '797'), ('799', '919'), ('799', '925'), ('917', '919'), ('917', '927'), ('919', '775'), ('919', '791'), ('919', '917'), ('919', '925'), ('919', '927'), ('925', '797'), ('925', '799'), ('925', '919'), ('925', '927'), ('927', '791'), ('927', '797'), ('927', '799'), ('927', '919'), ('927', '925'), ]
edge_widths = [ 1.29861, 0.893147, 4.15124, 4.17029, 1.29861, 0.2, 1.58629, 3.29104, 0.2, 0.893147, 4.13183, 3.33549, 4.22535, 2.68491, 0.2, 0.2, 0.2, 2.76495, 0.893147, 2.27944, 0.2, 0.2, 0.2, 0.893147, 0.893147, 0.2, 0.893147, 4.51749, 0.2, 4.35888, 1.29861, 1.58629, 4.55671, 0.2, 3.83759, 1.29861, 2.27944, 0.893147, 1.99176, 5.42036, 1.58629, 2.14591, 0.893147, 3.03321, 5.42575, 0.2, 0.2, 0.2, 0.2, 0.893147, 2.50259, 0.893147, 3.4581, 4.32713, 2.90805, 3.24452, 1.29861, 5.68894, 0.2, 3.9612, 0.2, 2.76495, 5.72943, ]
nodes = [ '29', '31', '541', '543', '775', '791', '797', '799', '917', '919', '925', '927', '1033', '1049', '1053', '1065', '1081', '1577', ]
node_sizes = [ 30.4, 3, 2.5, 0.7, 34.8, 188.7, 71.6, 46.1, 0.3, 1216.5, 57.3, 76.6, 1.6, 96.8, 35.8, 2110.8, 71.5, 30.3, ]



print(len(edges))


# prune_nodes(nodes, node_sizes, edges, edge_widths)
# prune_edges(edges, edge_widths, 1)




G.add_nodes_from(nodes)

for i in range(len(edges)):
    G.add_edge(edges[i][0], edges[i][1], width = edge_widths[i])


node_d = {}
for i in range(len(nodes)):
    val = math.sqrt(node_sizes[i])
    val = val * 2
    node_d[nodes[i]] = val

nx.set_node_attributes(G, node_d, 'size')

net = Network(directed=True)
net.repulsion()
net.from_nx(G)
net.show('transitions.html')


CellStates(nodes, edges, node_sizes)



# pos = nx.nx_agraph.graphviz_layout(G)
# nx.draw_networkx_nodes(G, pos, node_size = node_sizes)
# nx.draw_networkx_edges(G, pos, edgelist=G.edges(), nodelist=node_sizes) #, width=edge_widths, connectionstyle='arc3, rad = 0.1') #, nodelist=node_sizes)
# nx.draw_networkx_labels(G,pos)
# plt.show()


